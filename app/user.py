import asyncio

from aiogram import F, Router
from aiogram.filters.command import Command, CommandStart
from aiogram.types import Message, CallbackQuery, TelegramObject
from aiogram.enums import ChatAction
from aiogram.fsm.context import FSMContext

import app.keyboards as kb
from app.database.requset import *
from app.states import *

user = Router()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ö–æ–º–∞–Ω–¥


async def send_typing_action(event: TelegramObject):
    user_id = getattr(event.from_user, 'id', None)
    bot = getattr(event, 'bot', None)

    if bot and user_id:
        await bot.send_chat_action(chat_id=user_id, action=ChatAction.TYPING)
        await asyncio.sleep(0.5)


@user.message(CommandStart())
async def cmd_start(message: Message):
    await send_typing_action(message)
    await message.answer_sticker(sticker='CAACAgUAAxkBAAEOVI9oA6UuI8VCNj7KCBC6nYf_XzxhpQACXREAAq97UVWRKrlFhzZOKDYE')
    await message.answer(f'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <b>{message.from_user.first_name}</b>\n\n'
                         f'üèôÔ∏è –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç <b>¬´–ì–æ—Ä–æ–¥—Å–∫–æ–π –∫–ª—é—á¬ª</b>!\n\n'
                         f'<b>–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –ì—Ä–æ–∑–Ω–æ–≥–æ –≤–º–µ—Å—Ç–µ —Å –≤–∞–º–∏. –ó–¥–µ—Å—å –º–æ–∂–Ω–æ —Å–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö –≥–æ—Ä–æ–¥—Å–∫–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã:</b>\n'
                         f'<b>‚Ä¢ –†–∞–∑–±–∏—Ç—ã–µ –¥–æ—Ä–æ–≥–∏ üöß\n'
                         f'‚Ä¢ –ù–µ–∏—Å–ø—Ä–∞–≤–Ω–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ üí°\n'
                         f'‚Ä¢ –ü–µ—Ä–µ–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –º—É—Å–æ—Ä–Ω—ã–µ –±–∞–∫–∏ üóëÔ∏è\n'
                         f'‚Ä¢ –ü—Ä–æ–±–ª–µ–º—ã —Å –≤–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ–º üíß\n'
                         f'‚Ä¢ –î—Ä—É–≥–∏–µ –Ω–∞—Ä—É—à–µ–Ω–∏—è</b>\n\n'
                         f'<b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?</b>\n'
                         f'1Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã.\n'
                         f'2Ô∏è‚É£ –£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å –∏–ª–∏ –º–µ—Å—Ç–æ –Ω–∞ –∫–∞—Ä—Ç–µ.\n'
                         f'3Ô∏è‚É£ –ú—ã –ø—Ä–æ–≤–µ—Ä–∏–º –∑–∞—è–≤–∫—É –∏ –ø–µ—Ä–µ–¥–∞–¥–∏–º –≤ –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—É—é —Å–ª—É–∂–±—É.\n\n'
                         f'–í–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –ø–æ–º–æ–∂–µ—Ç —Å–¥–µ–ª–∞—Ç—å –≥–æ—Ä–æ–¥ –ª—É—á—à–µ!\n\n'
                         f'üìå –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É <b>¬´/report_problem¬ª</b>, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å.')


@user.message(Command('help'))
async def cmd_help(message: Message):
    await send_typing_action(message)
    await message.answer('<b>‚ÑπÔ∏è –°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É "–ì–æ—Ä–æ–¥—Å–∫–æ–π –∫–ª—é—á"</b>\n\n'
                         '–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ–∞–≥–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ –ø—Ä–æ–±–ª–µ–º—ã –≥–æ—Ä–æ–¥—Å–∫–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ì—Ä–æ–∑–Ω–æ–≥–æ. –í–æ—Ç —á—Ç–æ –æ–Ω —É–º–µ–µ—Ç:\n\n'
                         '<b>–û—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>\n'
                         'üìù –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–æ–∫ –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö (–¥–æ—Ä–æ–≥–∏, –æ—Å–≤–µ—â–µ–Ω–∏–µ, –º—É—Å–æ—Ä –∏ –¥—Ä.)\n'
                         'üñºÔ∏è –ü—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∏–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Å –≥–µ–æ–ª–æ–∫–∞—Ü–∏–µ–π –∏–ª–∏ –∞–¥—Ä–µ—Å–æ–º\n'
                         'üìä –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç—É—Å–∞ –≤–∞—à–∏—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π\n'
                         'üìã –û–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏–µ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫ <b>(/rules)</b>\n\n'
                         '<B>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:</b>\n'
                         '–ù–∞–∂–º–∏—Ç–µ <b>/start</b> –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏\n'
                         '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—Ä–æ–±–ª–µ–º—ã\n'
                         '–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ –∏ —É–∫–∞–∂–∏—Ç–µ –º–µ—Å—Ç–æ\n'
                         '–î–æ–±–∞–≤—å—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ\n\n'
                         '<b>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ:</b>\n'
                         'üîÑ –ò—Å—Ç–æ—Ä–∏—è –≤–∞—à–∏—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π\n'
                         '‚è±Ô∏è –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞\n'
                         '‚ÑπÔ∏è –ö–æ–Ω—Ç–∞–∫—Ç—ã –ø–æ–¥–¥–µ—Ä–∂–∫–∏ (@support)\n\n'
                         '–í–∞—à–∏ –∑–∞—è–≤–∫–∏ –ø–æ–º–æ–≥–∞—é—Ç —Å–¥–µ–ª–∞—Ç—å –≥–æ—Ä–æ–¥ –ª—É—á—à–µ!')


@user.message(Command('profile'))
@user.callback_query(F.data == 'profile')
async def cmd_profile(event: Message | CallbackQuery):
    user = await find_user(event.from_user.id)
    if isinstance(event, Message):
        await send_typing_action(event)
        if not user:
            await event.answer('–í–∞–º –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è!\n\n'
                                 '–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤–∞–º –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ —Å–ª–µ–¥–æ–≤–∞—Ç—å –≤—Å–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.',
                                 reply_markup=kb.register)
        else:
            await event.answer('üë§ <b>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>\n\n'
                                    '<i>–ó–¥–µ—Å—å —Ö—Ä–∞–Ω—è—Ç—Å—è –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏ –∏—Å—Ç–æ—Ä–∏—è –æ–±—Ä–∞—â–µ–Ω–∏–π</i>\n\n'
                                    'üìå <b>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n\n'
                                    f'–ò–º—è: <b>{user.name}</b>\n'
                                    f'–§–∞–º–∏–ª–∏—è: <b>{user.surname}</b>\n'
                                    f'üìß E-mail: <b>{user.email}</b>\n'
                                    f'üìû –¢–µ–ª–µ—Ñ–æ–Ω: <b>+{user.phone}</b>\n\n'
                                    '‚ÑπÔ∏è <b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:</b>\n'
                                    '‚Ä¢ –ù–∞–∂–º–∏—Ç–µ <b>¬´–ú–æ–∏ –∑–∞—è–≤–∫–∏¬ª</b> –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π\n'
                                    '‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ <b>¬´–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å¬ª</b> –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è\n'
                                    '‚Ä¢ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n\n'
                                    'üîí <b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞—â–∏—â–µ–Ω—ã</b>\n'
                                    '<i>–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–≤—è–∑–∏ —Å –≤–∞–º–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–æ–∫</i>',
                reply_markup=await kb.profile(user))
    elif isinstance(event, CallbackQuery):
        if not user:
            await event.answer()
            await event.message.answer('–í–∞–º –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è!\n\n'
                                 '–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤–∞–º –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ —Å–ª–µ–¥–æ–≤–∞—Ç—å –≤—Å–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.',
                                 reply_markup=kb.register)
        else:
            await event.answer()
            await event.message.edit_text('üë§ <b>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>\n\n'
                                    '<i>–ó–¥–µ—Å—å —Ö—Ä–∞–Ω—è—Ç—Å—è –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏ –∏—Å—Ç–æ—Ä–∏—è –æ–±—Ä–∞—â–µ–Ω–∏–π</i>\n\n'
                                    'üìå <b>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n\n'
                                    f'–ò–º—è: <b>{user.name}</b>\n'
                                    f'–§–∞–º–∏–ª–∏—è: <b>{user.surname}</b>\n'
                                    f'üìß E-mail: <b>{user.email}</b>\n'
                                    f'üìû –¢–µ–ª–µ—Ñ–æ–Ω: <b>+{user.phone}</b>\n\n'
                                    '‚ÑπÔ∏è <b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:</b>\n'
                                    '‚Ä¢ –ù–∞–∂–º–∏—Ç–µ <b>¬´–ú–æ–∏ –∑–∞—è–≤–∫–∏¬ª</b> –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π\n'
                                    '‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ <b>¬´–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å¬ª</b> –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è\n'
                                    '‚Ä¢ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n\n'
                                    'üîí <b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞—â–∏—â–µ–Ω—ã</b>\n'
                                    '<i>–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–≤—è–∑–∏ —Å –≤–∞–º–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–æ–∫</i>', reply_markup=await kb.profile(user))


@user.message(Command('rules'))
async def cmd_rules(message: Message):
    await send_typing_action(message)
    await message.answer('üìú <b>–ü—Ä–∞–≤–∏–ª–∞ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–æ–∫</b>\n\n'
                         '<i>–ß—Ç–æ–±—ã –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±—ã—Å—Ç—Ä–æ:</i>\n\n'
                         '1. <b>üì∏ –§–æ—Ç–æ/–í–∏–¥–µ–æ –ø—Ä–æ–±–ª–µ–º—ã</b>\n'
                         '‚Ä¢ –ß–µ—Ç–∫–∏–π —Å–Ω–∏–º–æ–∫ (–≤–∏–¥–Ω–æ –≤—Å—é –ø—Ä–æ–±–ª–µ–º—É)\n'
                         '‚Ä¢ –í–∏–¥–µ–æ ‚Äî –¥–æ 30 —Å–µ–∫—É–Ω–¥\n'
                         '‚Ä¢ –ë–µ–∑ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n\n'
                         '2. <b>üìù –û–ø–∏—Å–∞–Ω–∏–µ</b>\n'
                         '‚Ä¢ –¢–∏–ø –ø—Ä–æ–±–ª–µ–º—ã (—è–º–∞, –º—É—Å–æ—Ä –∏ —Ç.–¥.)\n'
                         '‚Ä¢ –î–µ—Ç–∞–ª–∏ (—Ä–∞–∑–º–µ—Ä—ã, –æ–ø–∞—Å–Ω–æ—Å—Ç—å)\n'
                         '‚Ä¢ –ë–µ–∑ –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω–æ–π –ª–µ–∫—Å–∏–∫–∏\n\n'
                         '3. <b>üìç –ê–¥—Ä–µ—Å</b>\n'
                         '‚Ä¢ –¢–æ—á–Ω—ã–π –∞–¥—Ä–µ—Å –∏–ª–∏ –æ—Ç–º–µ—Ç–∫–∞ –Ω–∞ –∫–∞—Ä—Ç–µ\n'
                         '‚Ä¢ –û—Ä–∏–µ–Ω—Ç–∏—Ä—ã ("–≤–æ–∑–ª–µ —à–∫–æ–ª—ã ‚Ññ5")\n\n'
                         '‚è± <b>–°—Ä–æ–∫–∏ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏—è:</b> 1-3 —Ä–∞–±–æ—á–∏—Ö –¥–Ω—è\n\n'
                         '‚ùå <b>–ß—Ç–æ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è:</b>\n'
                         '‚Ä¢ –ë–µ–∑ —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ\n‚Ä¢ –ù–µ—Ç–æ—á–Ω—ã–µ –∞–¥—Ä–µ—Å–∞\n‚Ä¢ –ü–æ–≤—Ç–æ—Ä–Ω—ã–µ –∑–∞—è–≤–∫–∏\n\n'
                         'üìå –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É <b>¬´/report_problem¬ª</b>, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞—è–≤–∫—É.')


@user.message(Command('report_problem'))
@user.callback_query(F.data == 'categories')
async def cmd_report_problem(event: Message | CallbackQuery, state: FSMContext):
    if isinstance(event, Message):
        if await find_user(event.from_user.id):
            await event.answer('üö® <b>–°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ</b>\n\n'
            '<i>–ó–∞–º–µ—Ç–∏–ª–∏ —á—Ç–æ-—Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å?</i>\n'
            '–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –Ω–∞–º, –∏ –º—ã –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ —Ä–µ—à–∏–º –ø—Ä–æ–±–ª–µ–º—É!\n\n'
            '‚ñ´Ô∏è‚ñ´Ô∏è‚ñ´Ô∏è‚ñ´Ô∏è‚ñ´Ô∏è‚ñ´Ô∏è‚ñ´Ô∏è‚ñ´Ô∏è‚ñ´Ô∏è\n\n'
            'üìå <b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>\n'
            '1Ô∏è‚É£ <b>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</b> (–¥–æ—Ä–æ–≥–∏, –æ—Å–≤–µ—â–µ–Ω–∏–µ –∏ –¥—Ä.)\n'
            '2Ô∏è‚É£ <b>–î–æ–±–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ</b> (—á—Ç–æ–±—ã –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å –ø—Ä–æ–±–ª–µ–º—É)\n'
            '3Ô∏è‚É£ <b>–£–∫–∞–∂–∏—Ç–µ –º–µ—Å—Ç–æ</b> (–∞–¥—Ä–µ—Å –∏–ª–∏ –æ—Ç–º–µ—Ç–∫–∞ –Ω–∞ –∫–∞—Ä—Ç–µ)\n'
            '4Ô∏è‚É£ <b>–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É</b> (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)\n\n'
            'üîπ <i>–ö–∞–∂–¥–∞—è –∑–∞—è–≤–∫–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π</i>\n'
            'üîπ <i>–°—Ç–∞—Ç—É—Å –º–æ–∂–Ω–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤ –ø—Ä–æ—Ñ–∏–ª–µ</i>\n\n'
            '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∏–∂–µ —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å üëá', reply_markup=await kb.category())
            await state.set_state(ReportProblem.category)
        else:
            await event.answer('–í–∞–º –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è!\n\n'
                               '–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤–∞–º –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ —Å–ª–µ–¥–æ–≤–∞—Ç—å –≤—Å–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.',
                               reply_markup=kb.register)
    else:
        if await find_user(event.from_user.id):
            await event.answer()
            await event.message.answer('üö® <b>–°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ</b>\n\n'
                               '<i>–ó–∞–º–µ—Ç–∏–ª–∏ —á—Ç–æ-—Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å?</i>\n'
                               '–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –Ω–∞–º, –∏ –º—ã –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ —Ä–µ—à–∏–º –ø—Ä–æ–±–ª–µ–º—É!\n\n'
                               '‚ñ´Ô∏è‚ñ´Ô∏è‚ñ´Ô∏è‚ñ´Ô∏è‚ñ´Ô∏è‚ñ´Ô∏è‚ñ´Ô∏è‚ñ´Ô∏è‚ñ´Ô∏è\n\n'
                               'üìå <b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</b>\n'
                               '1Ô∏è‚É£ <b>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</b> (–¥–æ—Ä–æ–≥–∏, –æ—Å–≤–µ—â–µ–Ω–∏–µ –∏ –¥—Ä.)\n'
                               '2Ô∏è‚É£ <b>–î–æ–±–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ</b> (—á—Ç–æ–±—ã –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å –ø—Ä–æ–±–ª–µ–º—É)\n'
                               '3Ô∏è‚É£ <b>–£–∫–∞–∂–∏—Ç–µ –º–µ—Å—Ç–æ</b> (–∞–¥—Ä–µ—Å –∏–ª–∏ –æ—Ç–º–µ—Ç–∫–∞ –Ω–∞ –∫–∞—Ä—Ç–µ)\n'
                               '4Ô∏è‚É£ <b>–û–ø–∏—à–∏—Ç–µ –ø—Ä–æ–±–ª–µ–º—É</b> (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)\n\n'
                               'üîπ <i>–ö–∞–∂–¥–∞—è –∑–∞—è–≤–∫–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–µ–π</i>\n'
                               'üîπ <i>–°—Ç–∞—Ç—É—Å –º–æ–∂–Ω–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –≤ –ø—Ä–æ—Ñ–∏–ª–µ</i>\n\n'
                               '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∏–∂–µ —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å üëá', reply_markup=await kb.category())
            await state.set_state(ReportProblem.category)
        else:
            await event.answer('–í–∞–º –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è!\n\n'
                               '–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤–∞–º –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ —Å–ª–µ–¥–æ–≤–∞—Ç—å –≤—Å–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.',
                               reply_markup=kb.register)


# Callback –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏


@user.callback_query(F.data == 'register')
async def clb_register(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await callback.message.delete()
    await callback.message.answer('üåü <b>–î–∞–≤–∞–π—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è –±–ª–∏–∂–µ!</b>\n\n'
                         '–ö–∞–∫ –≤–∞—Å –Ω–∞–∑—ã–≤–∞—é—Ç –¥—Ä—É–∑—å—è? –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ <b>–∏–º—è</b> ‚Äî –∏–º–µ–Ω–Ω–æ —Ç–∞–∫ –º—ã –±—É–¥–µ–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –≤–∞–º! ‚ú®', reply_markup=kb.stop)
    await state.set_state(Register.name)


@user.callback_query(F.data == 'history_bid')
async def clb_get_history_at_bid_user(callback: CallbackQuery):
    await callback.answer()
    await callback.message.delete()
    await callback.message.answer('üìã <b>–ò—Å—Ç–æ—Ä–∏—è –≤–∞—à–∏—Ö –∑–∞—è–≤–æ–∫</b>\n\n'
                                     '<i>–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –≤—Å–µ —Å–≤–æ–∏ –ø–æ–¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏ ‚Äî –∏—Ö —Å—Ç–∞—Ç—É—Å, –¥–∞—Ç—É —Å–æ–∑–¥–∞–Ω–∏—è –∏ –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã.</i>\n\n'
                                     '–ß—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:\n'
                                     '‚Ä¢ –û—Ç–∫—Ä—ã—Ç—å –ª—é–±—É—é –∑–∞—è–≤–∫—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π\n'
                                     '‚Ä¢ –£–≤–∏–¥–µ—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏',
                                     reply_markup=await kb.get_history_at_bid_user())


@user.callback_query(F.data.startswith('history_at_bid_'))
async def clb_get_history_at_bid_user(callback: CallbackQuery):
    problem_info = await get_report_problem_id(callback.data.split('_')[3])
    await callback.answer()
    await callback.message.delete()
    await callback.message.answer_photo(photo=problem_info.image,
                                        caption='üìã <b>–í–∞—à–∞ –∑–∞—è–≤–∫–∞</b>\n\n'
                                                f'{problem_info.description}\n\n'
                                                f'<b>–ê–¥—Ä–µ—Å: {problem_info.adress}</b>',
                                        reply_markup=await kb.btns_report_problems(problem_info.problem_category_id))


@user.callback_query(F.data.startswith('delete_problem_'))
async def clb_delete_problem(callback: CallbackQuery):
    category_id = callback.data.split('_')[-1]

    await delete_report_problem_user(
        tg_id=callback.from_user.id,
        category_id=category_id
    )

    await callback.answer('–ó–∞—è–≤–∫–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞.')
    await callback.message.delete()

    await callback.message.answer('üìã <b>–ò—Å—Ç–æ—Ä–∏—è –≤–∞—à–∏—Ö –∑–∞—è–≤–æ–∫</b>\n\n'
                                  '<i>–í —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –≤—Å–µ —Å–≤–æ–∏ –ø–æ–¥–∞–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏ ‚Äî –∏—Ö —Å—Ç–∞—Ç—É—Å, –¥–∞—Ç—É —Å–æ–∑–¥–∞–Ω–∏—è –∏ –∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã.</i>\n\n'
                                  '–ß—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å:\n'
                                  '‚Ä¢ –û—Ç–∫—Ä—ã—Ç—å –ª—é–±—É—é –∑–∞—è–≤–∫—É –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π\n'
                                  '‚Ä¢ –£–≤–∏–¥–µ—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏',
                                  reply_markup=await kb.get_history_at_bid_user())


@user.callback_query(F.data == 'push_notifications')
async def clb_on_off_notifications(callback: CallbackQuery):
    await callback.answer()
    if not await check_user_at_notifications_list(callback.from_user.id):
        await callback.message.edit_text('üîî <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏</b>\n\n'
                                         '<i>–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å, –∫–∞–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å:</i>\n\n'
                                         'üì≤ <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ü–∏–∏:</b>\n'
                                         '‚úÖ <b>–ù–æ–≤—ã–µ –∑–∞—è–≤–∫–∏</b> ‚Äì —Å—Ç–∞—Ç—É—Å –≤–∞—à–∏—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π\n'
                                         '‚úÖ <b>–í–∞–∂–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏</b> ‚Äì –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏\n'
                                         '‚úÖ <b>–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è</b> ‚Äì –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ß–°\n\n'
                                         '‚öôÔ∏è <b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?</b>\n'
                                         '‚Ä¢ –í–∫–ª—é—á–∏—Ç–µ –Ω—É–∂–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ\n'
                                         '‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n\n',
                                          reply_markup=kb.on_notifications)
    else:
        await callback.message.edit_text('üîî <b>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏</b>\n\n'
                                         '<i>–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å, –∫–∞–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∞—Ç—å:</i>\n\n'
                                         'üì≤ <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –æ–ø—Ü–∏–∏:</b>\n'
                                         '‚úÖ <b>–ù–æ–≤—ã–µ –∑–∞—è–≤–∫–∏</b> ‚Äì —Å—Ç–∞—Ç—É—Å –≤–∞—à–∏—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π\n'
                                         '‚úÖ <b>–í–∞–∂–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏</b> ‚Äì –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏\n'
                                         '‚úÖ <b>–≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–µ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è</b> ‚Äì –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ß–°\n\n'
                                         '‚öôÔ∏è <b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?</b>\n'
                                         '‚Ä¢ –í–∫–ª—é—á–∏—Ç–µ –Ω—É–∂–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∞–º–∏ –Ω–∏–∂–µ\n'
                                         '‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n\n',
                                         reply_markup=kb.off_notifications)


@user.callback_query(F.data == 'on_notifications')
async def clb_on_notifications(callback: CallbackQuery):
    await add_user_at_notifications_list(callback.from_user.id)
    await callback.answer('–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')
    await callback.message.edit_reply_markup(reply_markup=kb.off_notifications)


@user.callback_query(F.data == 'off_notifications')
async def clb_on_notifications(callback: CallbackQuery):
    await remove_user_from_notifications_list(callback.from_user.id)
    await callback.answer('–¢–µ–ø–µ—Ä—å –≤—ã –Ω–µ –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è')
    await callback.message.edit_reply_markup(reply_markup=kb.on_notifications)


@user.callback_query(F.data == 'stop')
async def clb_stop(callback: CallbackQuery, state: FSMContext):
    await callback.message.edit_text('–í–∞–º –Ω—É–∂–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è!\n\n'
                         '–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤–∞–º –Ω—É–∂–Ω–æ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ —Å–ª–µ–¥–æ–≤–∞—Ç—å –≤—Å–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º.',
                         reply_markup=kb.register)
    await state.clear()


@user.callback_query(F.data.startswith('editprofile_'))
@user.callback_query(F.data == 'edit_profile')
async def clb_edit_profile(callback: CallbackQuery):
    user_profile = await find_user(callback.from_user.id)
    await callback.answer()
    await callback.message.edit_text('‚úèÔ∏è <b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è</b>\n\n'
    '<i>–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ. –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å:</i>\n\n'
    'üìå <b>–¢–µ–∫—É—â–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n'
    f'üë§ <b>–ò–º—è:</b> {user_profile.name}\n'
    f'üìõ <b>–§–∞–º–∏–ª–∏—è:</b> {user_profile.surname}\n'
    f'üìß <b>E-mail:</b> {user_profile.email}\n'
    f'üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {user_profile.phone}\n', reply_markup=kb.edit_profile)


@user.callback_query(F.data == 'editname')
async def clb_edit_name(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await callback.message.edit_text('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ <b>–Ω–æ–≤–æ–µ –∏–º—è</b> ‚Äî –∏–º–µ–Ω–Ω–æ —Ç–∞–∫ –º—ã –±—É–¥–µ–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –≤–∞–º! ‚ú®', reply_markup=kb.back)
    await state.set_state(EditName.name)


@user.callback_query(F.data == 'editsurname')
async def clb_edit_name(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await callback.message.edit_text('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à—É <b>–Ω–æ–≤—É—é —Ñ–∞–º–∏–ª–∏—é</b> ‚Äî –∏–º–µ–Ω–Ω–æ —Ç–∞–∫ –º—ã –±—É–¥–µ–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –≤–∞–º! ‚ú®', reply_markup=kb.back)
    await state.set_state(EditSurName.surname)


@user.callback_query(F.data == 'editphone')
async def clb_edit_name(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await callback.message.edit_text('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à <b>–Ω–æ–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b> ‚ú®', reply_markup=kb.back)
    await state.set_state(EditPhone.phone)


@user.callback_query(F.data == 'editemail')
async def clb_edit_name(callback: CallbackQuery, state: FSMContext):
    await callback.answer()
    await callback.message.edit_text('–í–≤–µ–¥–∏—Ç–µ –≤–∞—à <b>–Ω–æ–≤–æ–π –ø–æ—á—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å—Å</b> ‚ú®', reply_markup=kb.back)
    await state.set_state(EditEmail.email)


# State –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏


@user.message(Register.name)
async def st_register_name(message: Message, state: FSMContext):
    await send_typing_action(message)
    await message.answer('üìõ <b>–ó–∞–≤–µ—Ä—à–∞–µ–º –≤–∞—à —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å!</b>\n\n'
                         '–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ <b>—Ñ–∞–º–∏–ª–∏—é</b> ‚Äî —ç—Ç–æ –Ω—É–∂–Ω–æ –¥–ª—è –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π –∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤. üìÑ', reply_markup=kb.stop)
    await state.update_data(name=message.text)
    await state.set_state(Register.surname)


@user.message(Register.surname)
async def st_register_name(message: Message, state: FSMContext):
    await send_typing_action(message)
    await message.answer('üì± <b>–û—Å—Ç–∞–ª–æ—Å—å —á—É—Ç—å-—á—É—Ç—å!</b>\n\n'
                         '–£–∫–∞–∂–∏—Ç–µ –≤–∞—à <b>–Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</b> ‚Äî –æ–Ω –ø–æ–º–æ–∂–µ—Ç:\n'
                         '‚Ä¢ –ë—ã—Å—Ç—Ä–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–æ—Å—Ç—É–ø üîê\n'
                         '‚Ä¢ –ü–æ–ª—É—á–∞—Ç—å –≤–∞–∂–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è üíå\n\n'
                         '<i>–§–æ—Ä–º–∞—Ç: 7XXXXXXXXXX</i> –±–µ–∑ –∑–Ω–∞–∫–∞ +', reply_markup=kb.stop)
    await state.update_data(surname=message.text)
    await state.set_state(Register.phone)


@user.message(Register.phone)
async def st_register_name(message: Message, state: FSMContext):
    await send_typing_action(message)
    await message.answer('üì¨ <b>–§–∏–Ω–∞–ª—å–Ω—ã–π —à—Ç—Ä–∏—Ö!</b>\n\n'
                         '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à <b>e-mail</b> ‚Äî –Ω–∞ –Ω–µ–≥–æ –ø—Ä–∏–¥—É—Ç:\n'
                         '‚Ä¢ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ ‚úÖ\n'
                         '‚Ä¢ –û—Ç—á–µ—Ç—ã –ø–æ –≤–∞—à–∏–º –∑–∞—è–≤–∫–∞–º üìä\n\n'
                         '<i>–ü—Ä–∏–º–µ—Ä: name@example.com</i> üåê', reply_markup=kb.stop)
    await state.update_data(phone=message.text)
    await state.set_state(Register.email)


@user.message(Register.email)
async def st_register_name(message: Message, state: FSMContext):
    await send_typing_action(message)
    await message.answer('–í—ã –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã!')
    await state.update_data(email=message.text)
    data = await state.get_data()
    await add_user(message.from_user.id, data['name'], data['surname'], data['phone'], data['email'])
    await state.clear()


@user.callback_query(ReportProblem.category, F.data.startswith('category_'))
async def st_report_problem_category(callback: CallbackQuery, state: FSMContext):
    data = callback.data.split('_')[1]
    await callback.answer()
    await state.update_data(category=data)
    await callback.message.edit_text('–ö–∞—Ç–µ–≥–æ—Ä–∏—è –≤—ã–±—Ä–∞–Ω–∞ ‚úÖ\n\n'
    'üì∏ <b>–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ –ø—Ä–æ–±–ª–µ–º—ã</b>\n\n'
    '<i>–ß—Ç–æ–±—ã –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –±—ã—Å—Ç—Ä–µ–µ, –ø—Ä–∏—à–ª–∏—Ç–µ:</i>\n'
    '‚úî <b>–ß–µ—Ç–∫–æ–µ —Ñ–æ—Ç–æ</b> (–∫—Ä—É–ø–Ω—ã–º –ø–ª–∞–Ω–æ–º, —Ö–æ—Ä–æ—à–µ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ)\n'
    '‚úî <b>–ö–æ—Ä–æ—Ç–∫–æ–µ –≤–∏–¥–µ–æ</b> (–¥–æ 30 —Å–µ–∫—É–Ω–¥, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å –º–∞—Å—à—Ç–∞–±)\n\n'
    '‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n'
    '<b>–ü—Ä–∏–º–µ—Ä —Ö–æ—Ä–æ—à–µ–≥–æ —Ñ–æ—Ç–æ:</b>\n'
    '‚ñ´Ô∏è –í–∏–¥–Ω–æ –≤—Å—é –ø—Ä–æ–±–ª–µ–º—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, —è–º—É —Ü–µ–ª–∏–∫–æ–º)\n'
    '‚ñ´Ô∏è –ù–µ—Ç –ª–∏—à–Ω–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤ –≤ –∫–∞–¥—Ä–µ\n'
    '‚ñ´Ô∏è –°–Ω—è—Ç–æ –ø—Ä–∏ –¥–Ω–µ–≤–Ω–æ–º —Å–≤–µ—Ç–µ\n\n'
    '‚ùå <b>–ß—Ç–æ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç:</b>\n'
    '‚ñ´Ô∏è –†–∞–∑–º—ã—Ç—ã–µ/—Ç–µ–º–Ω—ã–µ —Å–Ω–∏–º–∫–∏\n'
    '‚ñ´Ô∏è –°–∫—Ä–∏–Ω—à–æ—Ç—ã –∏–ª–∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–æ—Ç–æ\n'
    '‚ñ´Ô∏è –í–∏–¥–µ–æ –¥–ª–∏–Ω–Ω–µ–µ 30 —Å–µ–∫—É–Ω–¥', reply_markup=kb.back_in_category)
    await state.set_state(ReportProblem.photo_or_video)


@user.message(ReportProblem.photo_or_video)
async def st_report_problem_photo_or_video(message: Message, state: FSMContext):
    if message.from_user == F.photo:
        await state.update_data(category_photo_or_video=message.photo[-1].file_id)
    elif message.from_user == F.video:
        await state.update_data(category_video_or_video=message.video.file_id)
    else:
        await message.answer('‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ!')
        return
    await message.answer('‚ö†Ô∏è <b>–û–ø–∏—à–∏—Ç–µ, —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å</b>\n\n'
                         '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∫—Ä–∞—Ç–∫–æ —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –ø—Ä–æ–±–ª–µ–º–µ. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º –±—ã—Å—Ç—Ä–µ–µ –µ–µ —Ä–µ—à–∏—Ç—å!\n\n'
                         '<b>–ß—Ç–æ —É–∫–∞–∑–∞—Ç—å:</b>\n'
                         '1. <b>–¢–∏–ø –ø—Ä–æ–±–ª–µ–º—ã</b>\n'
                         '   (<i>–Ω–∞–ø—Ä–∏–º–µ—Ä: —Ä–∞–∑–±–∏—Ç–∞—è –¥–æ—Ä–æ–≥–∞, —Å–ª–æ–º–∞–Ω–Ω—ã–π —Ñ–æ–Ω–∞—Ä—å</i>)\n\n'
                         '2. <b>–ú–∞—Å—à—Ç–∞–± –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–∏—è</b>\n'
                         '   (<i>–Ω–∞–ø—Ä–∏–º–µ—Ä: "—è–º–∞ –¥–∏–∞–º–µ—Ç—Ä–æ–º 1 –º–µ—Ç—Ä"</i>)\n\n'
                         '3. <b>–û–ø–∞—Å–Ω–æ—Å—Ç—å –¥–ª—è –æ–∫—Ä—É–∂–∞—é—â–∏—Ö</b>\n'
                         '   (<i>–Ω–∞–ø—Ä–∏–º–µ—Ä: "–º–µ—à–∞–µ—Ç –ø—Ä–æ–µ–∑–¥—É –º–∞—à–∏–Ω"</i>)\n\n'
                         '<b>–ü—Ä–∏–º–µ—Ä —Ö–æ—Ä–æ—à–µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏—è:</b>\n'
                         '<i>"–ù–∞ –ø–µ—Ä–µ–∫—Ä–µ—Å—Ç–∫–µ —É–ª. –õ–µ–Ω–∏–Ω–∞ –∏ –ø—Ä. –ú–∏—Ä–∞ –≥–ª—É–±–æ–∫–∞—è —è–º–∞ (–æ–∫–æ–ª–æ 50 —Å–º), –≤ –∫–æ—Ç–æ—Ä—É—é —É–∂–µ –ø—Ä–æ–≤–∞–ª–∏–≤–∞–ª–∏—Å—å –∫–æ–ª–µ—Å–∞ –º–∞—à–∏–Ω. '
                         '–û—á–µ–Ω—å –æ–ø–∞—Å–Ω–æ –≤ —Ç–µ–º–Ω–æ–µ –≤—Ä–µ–º—è —Å—É—Ç–æ–∫."</i>',
                         reply_markup=kb.back_in_category)
    await state.set_state(ReportProblem.description)


@user.message(ReportProblem.description)
async def st_report_problem_description(message: Message, state: FSMContext):
    if len(message.text) < 512:
        await state.update_data(category_description=message.text)
        await message.answer('üìç <b>–£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å –ø—Ä–æ–±–ª–µ–º—ã</b>\n\n'
        '<b>–ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –æ—Ñ–æ—Ä–º–∏—Ç—å:</b>\n'
        '1. <b>–¢–æ—á–Ω—ã–π –∞–¥—Ä–µ—Å</b> (–µ—Å–ª–∏ –∑–Ω–∞–µ—Ç–µ):\n'
        '<i>–ü—Ä–∏–º–µ—Ä:</i>\n'
        '<code>"—É–ª. –õ–µ–Ω–∏–Ω–∞, –¥. 10, –≤–æ–∑–ª–µ –ø–æ–¥—ä–µ–∑–¥–∞ ‚Ññ3"</code>\n'
        '<code>"–ø—Ä. –ü–æ–±–µ–¥—ã, –º–µ–∂–¥—É –¥–æ–º–∞–º–∏ 15 –∏ 17"</code>\n\n'
        '2. <b>–ò–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é</b> (–Ω–∞–∂–º–∏—Ç–µ üìé ‚Üí "–ì–µ–æ–ø–æ–∑–∏—Ü–∏—è")\n\n'
        '3. <b>–û—Ä–∏–µ–Ω—Ç–∏—Ä—ã</b> (–µ—Å–ª–∏ —Ç–æ—á–Ω—ã–π –∞–¥—Ä–µ—Å –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω):\n'
        '<i>–ü—Ä–∏–º–µ—Ä:</i>\n'
        '<code>"–†—è–¥–æ–º —Å –¥–µ—Ç—Å–∫–æ–π –ø–ª–æ—â–∞–¥–∫–æ–π –≤ –ø–∞—Ä–∫–µ –ì–æ—Ä—å–∫–æ–≥–æ"</code>\n'
        '<code>"–£ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ \'–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —Ä—ã–Ω–æ–∫\'"</code>\n\n'
        '‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n'
        '‚ùå <b>–ß–∞—Å—Ç—ã–µ –æ—à–∏–±–∫–∏:</b>\n'
        '‚úñ <i>"–ù–∞–ø—Ä–æ—Ç–∏–≤ —Ç–æ–≥–æ –º–∞–≥–∞–∑–∏–Ω–∞"</i> (–Ω–µ–ø–æ–Ω—è—Ç–Ω–æ –≥–¥–µ)\n'
        '‚úñ –¢–æ–ª—å–∫–æ –Ω–∞–∑–≤–∞–Ω–∏–µ —É–ª–∏—Ü—ã –±–µ–∑ –Ω–æ–º–µ—Ä–∞ –¥–æ–º–∞\n'
        '‚úñ –ù–µ—Ç–æ—á–Ω—ã–µ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–∏\n\n', reply_markup=kb.back_in_category)
        await state.set_state(ReportProblem.adress)
    else:
        await message.answer('‚ùå –ò–∑–≤–∏–Ω–∏—Ç–µ –Ω–æ –¥–ª–∏–Ω–∞ –æ–ø–∏—Å–∞–Ω–∏—è –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å 512 —Å–∏–º–≤–æ–ª–æ–≤')
        return


@user.message(ReportProblem.adress)
async def st_report_problem_address(message: Message, state: FSMContext):
    await state.update_data(category_adress=message.text)
    data = await state.get_data()
    await message.answer('‚åõÔ∏è –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –ø—Ä–∏–Ω—è—Ç–∞ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ.')
    await save_report_problem_user(message.from_user.id, data['category_description'], data['category_photo_or_video'],
                                   data['category_adress'], data['category'])
    await state.clear()


@user.message(EditName.name)
async def st_edit_name(message: Message, state: FSMContext):
    await send_typing_action(message)
    await state.update_data(new_name=message.text)
    data = await state.get_data()
    success = await edit_name(message.from_user.id, data['new_name'])
    user = await find_user(message.from_user.id)

    if success:
        await message.answer("–ò–º—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ!")
        await message.answer('üë§ <b>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>\n\n'
                             '<i>–ó–¥–µ—Å—å —Ö—Ä–∞–Ω—è—Ç—Å—è –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏ –∏—Å—Ç–æ—Ä–∏—è –æ–±—Ä–∞—â–µ–Ω–∏–π</i>\n\n'
                             'üìå <b>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n\n'
                             f'–ò–º—è: <b>{user.name}</b>\n'
                             f'–§–∞–º–∏–ª–∏—è: <b>{user.surname}</b>\n'
                             f'üìß E-mail: <b>{user.email}</b>\n'
                             f'üìû –¢–µ–ª–µ—Ñ–æ–Ω: <b>+{user.phone}</b>\n\n'
                             '‚ÑπÔ∏è <b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:</b>\n'
                             '‚Ä¢ –ù–∞–∂–º–∏—Ç–µ <b>¬´–ú–æ–∏ –∑–∞—è–≤–∫–∏¬ª</b> –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π\n'
                             '‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ <b>¬´–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å¬ª</b> –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è\n'
                             '‚Ä¢ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n\n'
                             'üîí <b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞—â–∏—â–µ–Ω—ã</b>\n'
                             '<i>–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–≤—è–∑–∏ —Å –≤–∞–º–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–æ–∫</i>',
                             reply_markup=await kb.profile(user))
    else:
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∏–º—è. –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")

    await state.clear()


@user.message(EditSurName.surname)
async def st_edit_name(message: Message, state: FSMContext):
    await send_typing_action(message)
    await state.update_data(new_surname=message.text)
    data = await state.get_data()
    success = await edit_surname(message.from_user.id, data['new_surname'])
    user = await find_user(message.from_user.id)

    if success:
        await message.answer("–§–∞–º–∏–ª–∏—è —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
        await message.answer('üë§ <b>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>\n\n'
                             '<i>–ó–¥–µ—Å—å —Ö—Ä–∞–Ω—è—Ç—Å—è –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏ –∏—Å—Ç–æ—Ä–∏—è –æ–±—Ä–∞—â–µ–Ω–∏–π</i>\n\n'
                             'üìå <b>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n\n'
                             f'–ò–º—è: <b>{user.name}</b>\n'
                             f'–§–∞–º–∏–ª–∏—è: <b>{user.surname}</b>\n'
                             f'üìß E-mail: <b>{user.email}</b>\n'
                             f'üìû –¢–µ–ª–µ—Ñ–æ–Ω: <b>+{user.phone}</b>\n\n'
                             '‚ÑπÔ∏è <b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:</b>\n'
                             '‚Ä¢ –ù–∞–∂–º–∏—Ç–µ <b>¬´–ú–æ–∏ –∑–∞—è–≤–∫–∏¬ª</b> –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π\n'
                             '‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ <b>¬´–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å¬ª</b> –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è\n'
                             '‚Ä¢ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n\n'
                             'üîí <b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞—â–∏—â–µ–Ω—ã</b>\n'
                             '<i>–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–≤—è–∑–∏ —Å –≤–∞–º–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–æ–∫</i>',
                             reply_markup=await kb.profile(user))
    else:
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —Ñ–∞–º–∏–ª–∏—é. –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")

    await state.clear()


@user.message(EditPhone.phone)
async def st_edit_name(message: Message, state: FSMContext):
    await send_typing_action(message)
    await state.update_data(new_phone=message.text)
    data = await state.get_data()
    success = await edit_phone(message.from_user.id, data['new_phone'])
    user = await find_user(message.from_user.id)

    if success:
        await message.answer("–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!")
        await message.answer('üë§ <b>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>\n\n'
                             '<i>–ó–¥–µ—Å—å —Ö—Ä–∞–Ω—è—Ç—Å—è –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏ –∏—Å—Ç–æ—Ä–∏—è –æ–±—Ä–∞—â–µ–Ω–∏–π</i>\n\n'
                             'üìå <b>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n\n'
                             f'–ò–º—è: <b>{user.name}</b>\n'
                             f'–§–∞–º–∏–ª–∏—è: <b>{user.surname}</b>\n'
                             f'üìß E-mail: <b>{user.email}</b>\n'
                             f'üìû –¢–µ–ª–µ—Ñ–æ–Ω: <b>+{user.phone}</b>\n\n'
                             '‚ÑπÔ∏è <b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:</b>\n'
                             '‚Ä¢ –ù–∞–∂–º–∏—Ç–µ <b>¬´–ú–æ–∏ –∑–∞—è–≤–∫–∏¬ª</b> –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π\n'
                             '‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ <b>¬´–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å¬ª</b> –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è\n'
                             '‚Ä¢ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n\n'
                             'üîí <b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞—â–∏—â–µ–Ω—ã</b>\n'
                             '<i>–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–≤—è–∑–∏ —Å –≤–∞–º–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–æ–∫</i>',
                             reply_markup=await kb.profile(user))
    else:
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")

    await state.clear()


@user.message(EditEmail.email)
async def st_edit_name(message: Message, state: FSMContext):
    await send_typing_action(message)
    await state.update_data(new_email=message.text)
    data = await state.get_data()
    success = await edit_email(message.from_user.id, data['new_email'])
    user = await find_user(message.from_user.id)

    if success:
        await message.answer("–ü–æ—á—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å—Å –±—ã–ª —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!")
        await message.answer('üë§ <b>–õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç</b>\n\n'
                             '<i>–ó–¥–µ—Å—å —Ö—Ä–∞–Ω—è—Ç—Å—è –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∏ –∏—Å—Ç–æ—Ä–∏—è –æ–±—Ä–∞—â–µ–Ω–∏–π</i>\n\n'
                             'üìå <b>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n\n'
                             f'–ò–º—è: <b>{user.name}</b>\n'
                             f'–§–∞–º–∏–ª–∏—è: <b>{user.surname}</b>\n'
                             f'üìß E-mail: <b>{user.email}</b>\n'
                             f'üìû –¢–µ–ª–µ—Ñ–æ–Ω: <b>+{user.phone}</b>\n\n'
                             '‚ÑπÔ∏è <b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:</b>\n'
                             '‚Ä¢ –ù–∞–∂–º–∏—Ç–µ <b>¬´–ú–æ–∏ –∑–∞—è–≤–∫–∏¬ª</b> –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –æ–±—Ä–∞—â–µ–Ω–∏–π\n'
                             '‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ <b>¬´–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å¬ª</b> –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è\n'
                             '‚Ä¢ –í—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n\n'
                             'üîí <b>–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞—â–∏—â–µ–Ω—ã</b>\n'
                             '<i>–ú—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–≤—è–∑–∏ —Å –≤–∞–º–∏ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞—è–≤–æ–∫</i>',
                             reply_markup=await kb.profile(user))
    else:
        await message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –ø–æ—á—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å—Å. –í–æ–∑–º–æ–∂–Ω–æ, –≤—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")

    await state.clear()